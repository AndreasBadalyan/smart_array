\hypertarget{input_8hpp}{}\section{/home/andreas/\+Desktop/\+Andreas/smart\+\_\+array/src/input.hpp File Reference}
\label{input_8hpp}\index{/home/andreas/\+Desktop/\+Andreas/smart\+\_\+array/src/input.\+hpp@{/home/andreas/\+Desktop/\+Andreas/smart\+\_\+array/src/input.\+hpp}}


Header file containing includes and input functions prototypes.  


{\ttfamily \#include $<$iostream$>$}\\*
{\ttfamily \#include $<$string$>$}\\*
{\ttfamily \#include $<$limits$>$}\\*
Include dependency graph for input.\+hpp\+:
% FIG 0
This graph shows which files directly or indirectly include this file\+:
% FIG 1
\subsection*{Functions}
\begin{DoxyCompactItemize}
\item 
bool \hyperlink{input_8hpp_a53b38bac619bcfce9702982ed48ba4bb}{non} (const std\+::string \&)
\item 
std\+::string \hyperlink{input_8hpp_ae44a20eb0c108acde08c86ddf9b5e3b0}{str\+\_\+input} (const char $\ast$, int=1, bool($\ast$)(const std\+::string \&)=\hyperlink{str__input_8cpp_afb1f0fef7abb19c2eb35ab7cafbd4c82}{non})
\item 
int \hyperlink{input_8hpp_ae9182d06aab8e6d862af31ffaa006332}{int\+\_\+input} (const char $\ast$)
\end{DoxyCompactItemize}


\subsection{Detailed Description}
Header file containing includes and input functions prototypes. 



\subsection{Function Documentation}
\index{input.\+hpp@{input.\+hpp}!int\+\_\+input@{int\+\_\+input}}
\index{int\+\_\+input@{int\+\_\+input}!input.\+hpp@{input.\+hpp}}
\subsubsection[{\texorpdfstring{int\+\_\+input(const char $\ast$)}{int_input(const char *)}}]{\setlength{\rightskip}{0pt plus 5cm}int int\+\_\+input (
\begin{DoxyParamCaption}
\item[{const char $\ast$}]{message}
\end{DoxyParamCaption}
)}\hypertarget{input_8hpp_ae9182d06aab8e6d862af31ffaa006332}{}\label{input_8hpp_ae9182d06aab8e6d862af31ffaa006332}
Accepts user input and handles invalid cases. 
\begin{DoxyParams}{Parameters}
{\em message} & Text to be displayed. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
User input as integer. 
\end{DoxyReturn}
\index{input.\+hpp@{input.\+hpp}!non@{non}}
\index{non@{non}!input.\+hpp@{input.\+hpp}}
\subsubsection[{\texorpdfstring{non(const std\+::string \&)}{non(const std::string &)}}]{\setlength{\rightskip}{0pt plus 5cm}bool non (
\begin{DoxyParamCaption}
\item[{const std\+::string \&}]{input}
\end{DoxyParamCaption}
)}\hypertarget{input_8hpp_a53b38bac619bcfce9702982ed48ba4bb}{}\label{input_8hpp_a53b38bac619bcfce9702982ed48ba4bb}
Default function for str\+\_\+input that returns true for every case. 
\begin{DoxyParams}{Parameters}
{\em input} & Input string. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Always true. 
\end{DoxyReturn}
\index{input.\+hpp@{input.\+hpp}!str\+\_\+input@{str\+\_\+input}}
\index{str\+\_\+input@{str\+\_\+input}!input.\+hpp@{input.\+hpp}}
\subsubsection[{\texorpdfstring{str\+\_\+input(const char $\ast$, int=1, bool($\ast$)(const std\+::string \&)=non)}{str_input(const char *, int=1, bool(*)(const std::string &)=non)}}]{\setlength{\rightskip}{0pt plus 5cm}std\+::string str\+\_\+input (
\begin{DoxyParamCaption}
\item[{const char $\ast$}]{message, }
\item[{int}]{len, }
\item[{bool($\ast$)(const std\+::string \&)}]{f\+\_\+ptr}
\end{DoxyParamCaption}
)}\hypertarget{input_8hpp_ae44a20eb0c108acde08c86ddf9b5e3b0}{}\label{input_8hpp_ae44a20eb0c108acde08c86ddf9b5e3b0}
Accepts and validates user input. 
\begin{DoxyParams}{Parameters}
{\em message} & Text message to display on screan. \\
\hline
{\em len} & Length that must be compared with input string length. \\
\hline
{\em f\+\_\+ptr} & pointer of function that must apply to input string, by default it\textquotesingle{}s non function that returns true for every case. \\
\hline
\end{DoxyParams}
\begin{DoxyReturn}{Returns}
Input string that is validated. 
\end{DoxyReturn}
